// <auto-generated />
using EscuelaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EscuelaAPI.Migrations
{
    [DbContext(typeof(EscuelaContext))]
    partial class EscuelaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Alumno", b =>
                {
                    b.Property<int>("AlumnoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlumnoID"));

                    b.Property<string>("Grado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AlumnoID");

                    b.ToTable("Alumnos");
                });

            modelBuilder.Entity("Profesor", b =>
                {
                    b.Property<int>("ProfesorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProfesorID"));

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProfesorID");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("RegistroSalida", b =>
                {
                    b.Property<int>("RegistroSalidaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegistroSalidaID"));

                    b.Property<int>("AlumnoID")
                        .HasColumnType("int");

                    b.Property<int>("ProfesorID")
                        .HasColumnType("int");

                    b.Property<bool>("ProfesorVerificado")
                        .HasColumnType("bit");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("RegistroSalidaID");

                    b.HasIndex("AlumnoID");

                    b.HasIndex("ProfesorID");

                    b.HasIndex("TutorID");

                    b.ToTable("RegistrosSalida");
                });

            modelBuilder.Entity("Tutor", b =>
                {
                    b.Property<int>("TutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TutorID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TutorID");

                    b.ToTable("Tutores");
                });

            modelBuilder.Entity("RegistroSalida", b =>
                {
                    b.HasOne("Alumno", "Alumno")
                        .WithMany("RegistrosSalida")
                        .HasForeignKey("AlumnoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profesor", "Profesor")
                        .WithMany("RegistrosSalida")
                        .HasForeignKey("ProfesorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tutor", "Tutor")
                        .WithMany("RegistrosSalida")
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Alumno");

                    b.Navigation("Profesor");

                    b.Navigation("Tutor");
                });

            modelBuilder.Entity("Alumno", b =>
                {
                    b.Navigation("RegistrosSalida");
                });

            modelBuilder.Entity("Profesor", b =>
                {
                    b.Navigation("RegistrosSalida");
                });

            modelBuilder.Entity("Tutor", b =>
                {
                    b.Navigation("RegistrosSalida");
                });
#pragma warning restore 612, 618
        }
    }
}
